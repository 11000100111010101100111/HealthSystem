<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xjh.springboot.dao.UserDao">
    <select id="getUserByMessage" resultType="com.xjh.springboot.pojo.User">
        SELECT * FROM `easyuser` where `username` = #{username} and `password` = #{password} AND `state` = 1
    </select>


<!--    /*@Author 四原色-->
<!--    * 2021-07-30 19:55:00-->
<!--    */-->
<!--    //分页查询获取全部用户信息-->
<!--    public List<User> getAllUser(@Param("username")String username,@Param("pageStart") int pageStart,@Param("pageSize") int pageSize);-->
    <select id="getAllUser" resultType="com.xjh.springboot.pojo.User">
        SELECT * FROM `easyuser`
        <if test="username != null">
            WHERE `username` LIKE #{username}
        </if>
        LIMIT #{pageStart},#{pageSize}
    </select>
<!--    //分页查询获取全部用户数目-->
<!--    public int getAllUserNums(@Param("username")String username,@Param("pageStart") int pageStart,@Param("pageSize") int pageSize);-->
    <select id="getAllUserNums" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM `easyuser`
        <if test="username != null " >
            WHERE `username` LIKE #{username}
        </if>
    </select>

<!--    //修改用户状态-->
<!--    public int modifyUserState(@Param("id") Integer id,@Param("state") boolean state);-->
    <update id="modifyUserState">
        UPDATE easyuser SET state = #{state} WHERE id = #{id}
    </update>

<!--    //添加用户-->

<!--    //判断用户是否存在-->
<!--    public int hasUser(String username);-->
    <select id="hasUser" parameterType="java.lang.String" resultType="int">
        select count(*) from easyuser where `username` = #{username}
    </select>
<!--    public int addUser(@Param("user") User user);-->
    <insert id="addUser" parameterType="com.xjh.springboot.pojo.User">
        INSERT INTO easyuser (`username`,`password`,`email`,`role`,`state`)
        VALUES (#{username},#{password},#{email},#{role},#{state})
    </insert>

<!--    //删除用户,根据用户id删除指定用户-->
<!--    public int removeUser(int id);-->
    <delete id="removeUser">
        DELETE FROM easyuser WHERE `id` = #{id}
    </delete>

<!--    //修改用户信息-->
<!--    //根据id获取用户信息-->
<!--    public User getUserById(int id);-->
    <select id="getUserById" parameterType="int" resultType="com.xjh.springboot.pojo.User">
        SELECT * FROM easyuser WHERE `id` = #{id}
    </select>
<!--    //更新用户信息-->
<!--    public int updateUser(User user);-->
    <update id="updateUser" parameterType="com.xjh.springboot.pojo.User">
        UPDATE easyuser set
        `username` = #{username},
        `password` = #{password},
        `email` = #{email}
         WHERE `id` = #{id}
    </update>
</mapper>